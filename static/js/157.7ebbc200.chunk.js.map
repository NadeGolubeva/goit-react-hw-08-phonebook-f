{"version":3,"file":"static/js/157.7ebbc200.chunk.js","mappings":"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","sources":["pages/ContactList/ContactList.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/ContactList/ContactList.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  WechatOutlined,\n  QqOutlined,\n} from '@ant-design/icons';\n\n\nexport const Item = styled.li`\n  background-color: #e8eec5;\n  padding-left: 10px;\n  border-radius: 7px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 22px;\n  border: 1px solid #2ca04f;\n  \n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 15px;\n  flex-direction: column;\n`;\n\nexport const UserIconList = styled(QqOutlined)`\n \n  margin-right: 8px;\n  color: #2ca04f;\n`;\n\nexport const PhoneiconList = styled(WechatOutlined)`\n  margin: 0 8px;\n  color: #2ca04f;\n`;\n\nexport const DivName = styled.div`\n  min-width: 220px;\n`;\n\nexport const Title = styled.h2`\n  margin: 20px auto;\n  color: #132b1bbb;\n`;\n\nexport const Container = styled.div`\n  padding: 20px 0;\n`;\n","import styled from 'styled-components';\n\nexport const WrapperFiler = styled.div`\n  font-size: 20px;\n`;\n\nexport const FilterInput = styled.input`\n  height: 40px;\n  width: 250px;\n  padding: 0 10px;\n  font-size: 20px;\n  border: 1px solid #2ca04f;\n  border-radius: 5px;\n  transition: box-shadow cubic-bezier(0.17, 0.67, 0.86, 0.57) 300ms;\n&:hover {border: 3px solid #2ca04f};\n&:focus {border: 3px solid #2ca04f};\n`;\n\nexport const FilterP = styled.p`\n  font-weight: 500;\n  margin-bottom: 20px;\n  color: #132b1bbb;\n`;\n","import { WrapperFiler, FilterInput, FilterP } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filtration } from 'Redux/Contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter); \n\n  return (\n    <WrapperFiler>\n      <FilterP>Find contacts by name</FilterP>\n\n      <FilterInput\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(filtration(e.target.value))} \n      />\n    </WrapperFiler>\n  );\n};\n\n \n","import styled from 'styled-components';\nimport {  Form, Input, Modal } from 'antd';\nimport { WechatOutlined, QqOutlined } from '@ant-design/icons';\n\nexport const FormWrap = styled(Form)`\n  margin: 0 auto;\n\n`;\n\nexport const ModalNewContactBtn =  styled.button`\n  margin-right: 8px;\n  margin-left: auto;\n background-color: #2ca04f;\n color: white;\n font-size: 16px;\n    height: 32px;\n    padding: 4px 15px;\n    border-radius: 6px;\n    border: 0px solid white;\n`;\n\n\nexport const UserIcon = styled(QqOutlined)`\n  color: #2ca04f;\n`;\n\nexport const PhoneIcon = styled(WechatOutlined)`\n  color: #2ca04f;\n`;\n\nexport const InputForm = styled(Input)`\n  height: 35px;\n  font-size: 20px;\n  width: 100%;\n`;\n\nexport const ModalNewContact = styled(Modal)`\n  text-align: center;\n  .ant-modal-content {\n    width: 340px;\n    height: 225px;\n    position: absolute;\n    top: 50%;\n    left: 20%;\n    background-color: #e8eec5;\n  \n  }\n`;\n\nexport const OpenModalNewContact = styled.button`\n  margin-right: 8px;\n  margin-top: 8px;\n  margin-left: auto;\n background-color: #2ca04f;\n color: white;\n font-size: 16px;\n    height: 32px;\n    padding: 4px 15px;\n    border-radius: 6px;\n    border: 0px solid white;\n      &:hover {\n    color: #132b1bbb;\n     \n  }\n\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'Redux/Contacts/operations';\nimport { useState } from 'react';\nimport {\n  FormWrap,\n  ModalNewContactBtn,\n  UserIcon,\n  PhoneIcon,\n  InputForm,\n  ModalNewContact,\n  OpenModalNewContact,\n} from './ContactForm.styled'; \n\nexport const ContactForm = () => {\n  const [open, setOpen] = useState(false); \n  const [form] = FormWrap.useForm();\n  const currentContacts = useSelector(state => state.contacts.items); \n  const loader = useSelector(state => state.contacts.isLoading);\n  const dispatch = useDispatch();\n\n  const showModal = () => {\n    form.resetFields(); \n    setOpen(true); \n  };\n\n  const submit = value => {\n    const formatTel = () => {\n      const number = value.number;\n      const phoneLength = number.length;\n\n      if (phoneLength < 7) {\n        return `(${number.slice(0, 3)}) ${number.slice(3)}`; \n      }\n      return `(${number.slice(0, 3)}) ${number.slice(3, 6)}-${number.slice(\n        6,\n        10\n      )}`;\n    };\n\n    const newContact = { name: value.name, number: formatTel() }; \n    const newContactName = newContact.name.toLowerCase();\n\n    if (\n      currentContacts.find(\n        contact => contact.name.toLowerCase() === newContactName\n      )\n    ) {\n      alert(`${newContact.name} is already in contact`);\n    } else {\n      dispatch(addContact(newContact)); \n      if (!loader) {\n        form.resetFields();\n        setOpen(false);\n      }\n    }\n  };\n\n  return (\n    <>\n      <OpenModalNewContact\n        type=\"primary\"\n        onClick={showModal}\n        title=\"add new contact\"\n        size={'large'} \n      >\n        Add contact\n      </OpenModalNewContact>\n\n      <ModalNewContact\n        footer={null}\n        title=\"Add contact\"\n    \n        open={open}\n        onCancel={() => setOpen(false)}\n      >\n        <FormWrap\n          form={form}\n          name=\"normal_login\"\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={submit}\n        >\n          <FormWrap.Item\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message: 'Input Name!',\n                type: 'text',\n              },\n            ]}\n          >\n            <InputForm\n              prefix={<UserIcon />}\n              placeholder=\"Name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            />\n          </FormWrap.Item>\n\n          <FormWrap.Item\n            name=\"number\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input Number!',\n                type: 'phone',\n              },\n            ]}\n          >\n            <InputForm\n              prefix={<PhoneIcon />}\n              type=\"\"\n              placeholder=\"Number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            />\n          </FormWrap.Item>\n\n          <FormWrap.Item>\n            <ModalNewContactBtn type=\"primary\" htmlType=\"submit\">\n              Create contact\n            </ModalNewContactBtn>\n          </FormWrap.Item>\n        </FormWrap>\n      </ModalNewContact>\n    </>\n  );\n};\n\n \n","import {\n  Item,\n  List,\n  UserIconList,\n  PhoneiconList,\n  DivName,\n  Title,\n  Container,\n} from './ContactList.styled'; \nimport { LoadingOutlined } from '@ant-design/icons';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  deleteContact,\n  fetchContacts,\n} from 'Redux/Contacts/operations'; \n\nimport {\n  useEffect,\n} from 'react';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Button, Popconfirm } from 'antd'; \nimport {\n  DeleteOutlined,\n} from '@ant-design/icons'; \n\nexport default function Contactlist() {\n\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    dispatch(fetchContacts()); \n  }, [dispatch]);\n\n  const { isLoading } = useSelector(state => state.contacts);\n  const contacts = useSelector(state => state.contacts.items);\n  const filterData = useSelector(state => state.filter).toLowerCase(); \n\n  const visibleContacts = contacts.filter(subscriber =>\n    subscriber.name.toLowerCase().includes(filterData)\n  );\n\n  return (\n    <section>\n      <Container>\n        <div>\n          {' '}\n          {contacts.length < 1 ? (\n            <Title>Add your contacts</Title>\n          ) : (\n            <Filter />\n          )}\n          <ContactForm />\n          {isLoading &&<LoadingOutlined  style={{ fontSize: '22px', color: '#2ca04f' }} spin />}\n        </div>\n        <List>\n          {visibleContacts.map(({ id, name, number }) => (\n            <Item key={id}>\n              <DivName>\n                <UserIconList />\n                {name}:\n              </DivName>\n              <DivName>\n\n              <PhoneiconList /> {number}\n              </DivName>\n              \n              <Popconfirm\n                title=\"Approve to delete this contact?\"\n                okText=\"Yes\"\n                cancelText=\"No\"\n                color='#e8eec5'\n                onConfirm={() => dispatch(deleteContact(id))}\n              >\n                <Button title=\"delete contact\" type=\"primary\" style={{backgroundColor: '#2ca04f'}}>\n                  <DeleteOutlined /> Delete\n                </Button>\n              </Popconfirm>\n            </Item>\n          ))}\n        </List>\n      </Container>\n    </section>\n  );\n}\n\n\n"],"names":["Item","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","UserIconList","QqOutlined","_templateObject3","PhoneiconList","WechatOutlined","_templateObject4","DivName","_templateObject5","Title","_templateObject6","Container","_templateObject7","WrapperFiler","FilterInput","FilterP","Filter","dispatch","useDispatch","filter","useSelector","state","_jsxs","children","_jsx","type","value","onChange","e","filtration","target","FormWrap","Form","ModalNewContactBtn","UserIcon","PhoneIcon","InputForm","Input","ModalNewContact","Modal","OpenModalNewContact","ContactForm","_useState","useState","_useState2","_slicedToArray","open","setOpen","_FormWrap$useForm","useForm","form","currentContacts","contacts","items","loader","isLoading","_Fragment","onClick","resetFields","title","size","footer","onCancel","name","initialValues","remember","onFinish","newContact","number","length","concat","slice","formatTel","newContactName","toLowerCase","find","contact","alert","addContact","rules","required","message","prefix","placeholder","pattern","htmlType","Contactlist","useEffect","fetchContacts","filterData","visibleContacts","subscriber","includes","LoadingOutlined","style","fontSize","color","spin","map","_ref","id","Popconfirm","okText","cancelText","onConfirm","deleteContact","Button","backgroundColor","DeleteOutlined"],"sourceRoot":""}